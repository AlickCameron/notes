library(fpp)
install.packages("tseries")
library(fpp)
library(forecast)
data(ausbeer)
ausbeer.df <- data.frame(quarter = as.numeric(time(ausbeer)), production = as.numeric(ausbeer))
ausbeer.arima <- auto.arima(ausbeer)
ausbeer.df$arima <- as.numeric(fitted(ausbeer.arima))
qplot(x = quarter, y = production, data = ausbeer.df) +
geom_line(aes(y = arima), colour = I("#377eb8"), alpha = I(0.8)) +
geom_smooth(se = FALSE, colour = I("#e41a1c"), alpha = I(0.8)) +
ylab("Beer production") +
xlab("Year")
library(ggplot2)
library(fpp)
library(forecast)
data(ausbeer)
ausbeer.df <- data.frame(quarter = as.numeric(time(ausbeer)), production = as.numeric(ausbeer))
ausbeer.arima <- auto.arima(ausbeer)
ausbeer.df$arima <- as.numeric(fitted(ausbeer.arima))
qplot(x = quarter, y = production, data = ausbeer.df) +
geom_line(aes(y = arima), colour = I("#377eb8"), alpha = I(0.8)) +
geom_smooth(se = FALSE, colour = I("#e41a1c"), alpha = I(0.8)) +
ylab("Beer production") +
xlab("Year")
library(MASS)
rmod <- rlm(Price ~ Pages, data = TextPrices)
p + geom_smooth(method = "lm", se = FALSE, colour = I("#377eb8")) +
geom_abline(intercept = coef(rmod)[1], slope = coef(rmod)[2], colour = I("#e41a1c")) +
geom_abline(intercept = -10, slope = .15, colour = I("#4daf4a"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE)
# Chunk 2
library(Stat2Data)
library(ggplot2)
data(TextPrices)
p <- qplot(x = Pages, y = Price, data = TextPrices) +
ylab("Textbook price") +
xlab("No. of pages")
print(p)
# Chunk 3
library(fpp)
library(forecast)
data(ausbeer)
ausbeer.df <- data.frame(quarter = as.numeric(time(ausbeer)), production = as.numeric(ausbeer))
ausbeer.arima <- auto.arima(ausbeer)
ausbeer.df$arima <- as.numeric(fitted(ausbeer.arima))
qplot(x = quarter, y = production, data = ausbeer.df) +
geom_line(aes(y = arima), colour = I("#377eb8"), alpha = I(0.8)) +
geom_smooth(se = FALSE, colour = I("#e41a1c"), alpha = I(0.8)) +
ylab("Beer production") +
xlab("Year")
library(MASS)
rmod <- rlm(Price ~ Pages, data = TextPrices)
p + geom_smooth(method = "lm", se = FALSE, colour = I("#377eb8")) +
geom_abline(intercept = coef(rmod)[1], slope = coef(rmod)[2], colour = I("#e41a1c")) +
geom_abline(intercept = -10, slope = .15, colour = I("#4daf4a"))
library(MASS)
rmod <- rlm(Price ~ Pages, data = TextPrices)
p + geom_smooth(method = "lm", se = FALSE, colour = I("#377eb8"), linetype = 1) +
geom_abline(intercept = coef(rmod)[1], slope = coef(rmod)[2], colour = I("#e41a1c"), linetype = 2) +
geom_abline(intercept = -10, slope = .15, colour = I("#4daf4a"), linetype = 4)
plot(cars)
plot(cars)
1:10
1:10
install.packages("tidyverse")
read.csv("https://github.com/cmsc205/data/raw/master/movie_metadata.csv")
# Printing the first 6 rows
head(movies)
# Load the data and assign it a name
movies <- read.csv("https://github.com/cmsc205/data/raw/master/movie_metadata.csv")
# Printing the first 6 rows
head(movies)
# Printing the last 6 rows
tail(movies)
# Looking at the number of rows and columns
dim(movies)
# Looking at the structure
str(movies)
?str
movies <- read.csv("https://github.com/cmsc205/data/raw/master/movie_metadata.csv", as.is = TRUE)
# Printing the first 6 rows
head(movies)
# Looking at the structure
str(movies)
install.packages("readr")
library(tidyverse)
movies <- read_csv("https://github.com/cmsc205/data/raw/master/movie_metadata.csv")
View(movies)
str(movies)
spec()
?read)csv
?read_csv()
# Load the data and assign it a name
movies <- read_csv("https://github.com/cmsc205/data/raw/master/movie_metadata.csv")
problems()
spec()
movies[2324,]
print(movies[2324,])
as.vector(movies[2324,])
as.data.frame(movies[2324,])
movies <- read.csv("https://github.com/cmsc205/data/raw/master/movie_metadata.csv", as.is = TRUE)
# Printing the first 6 rows
head(movies)
# Looking at the structure
str(movies)
?factor
?mode
?numeric
# You only need to install a package once
install.packages("tidyverse")
# You will need to load the package in each R markdown notebook
library(tidyverse)
install.packages("tidyverse")
# Load the data and assign it a name
movies <- read.csv("https://github.com/cmsc205/data/raw/master/movie_metadata.csv", as.is = TRUE)
# Load the data and assign it a name
movies <- read.csv("https://github.com/cmsc205/data/raw/master/movie_metadata.csv", as.is = TRUE)
summary(movies)
# Addition
3 + 5
# Subtraction
2 - 5
# Assign a name
x <- 3 + 5
# Multiplication
x * 10
# Division
x / 2
# Exponentiation
x^4
# Order of operations
1 + 2 * 3 * 4 * 5 / 6 ** 3 + 7 + 8
1 + 2 * ((3 * 4 * 5 / 6) ** 3) + 7 + 8
# Order of operations
1 + 2 * 3 * 4 * 5 / 6^3 + 7 + 8
1 + 2 * ((3 * 4 * 5 / 6)^3) + 7 + 8
# Assign a name
x <- 3 + 5
# Multiplication
y <- x * 10
# Division
y/x
# Exponentiation
x^4
# Assign a name
x <- 3 + 5
# Multiplication
y <- x * 10
# Division
y/x
# Exponentiation
x^4
summary(movies)
movies$gross - movies$budget
movies$net <- movies$gross - movies$budget
summary(movies$net)
movies$net <- (movies$gross - movies$budget) / 1e6
summary(movies$net)
